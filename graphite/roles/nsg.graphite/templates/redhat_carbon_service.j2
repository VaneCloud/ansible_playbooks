#!/bin/bash
#
# carbon-cache		Start up the carbon-cache daemon
#
# chkconfig: 2345 55 25
# description: Carbon-cache accepts metrics over various protocols and writes them to disk as efficiently as possible.
#
# processname: carbon-cache.py

### BEGIN INIT INFO
# Provides: carbon-cache.py
# Required-Start: $local_fs $network
# Required-Stop: $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start carbon-cache
# Description: Carbon-cache accepts metrics over various protocols and writes them to disk as efficiently as possible.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

if [ "x$2" != "x2nd" ]; then
	sudo -u {{ graphite_user }} $0 $1 2nd
	exit 0
fi

start() {
	[ -x {{ graphite_install_path }}/bin/carbon-cache.py ] || exit 1
	/opt/graphite/bin/carbon-cache.py start 2> /dev/null
	RETVAL=$?
	return $RETVAL
}

stop() {
	[ -x {{ graphite_install_path }}/bin/carbon-cache.py ] || exit 1
	/opt/graphite/bin/carbon-cache.py stop 2> /dev/null
	RETVAL=$?
	echo -n "Wait for process to close "
	cnt=0
	while status; do 
		echo -n .
		sleep 1
		cnt=$(( cnt + 1 ))
		if [ $cnt -gt 10 ]; then
			echo "Failed to stop process, send SIGKILL"
			kill -9 $(ps -fu {{ graphite_user }} | awk '/carbon-cache/{print $2}')
			break
		fi
	done
	echo
	return $RETVAL
}

restart() {
	stop
	start
}

status() {
	[ -x {{ graphite_install_path }}/bin/carbon-cache.py ] || exit 1
	/opt/graphite/bin/carbon-cache.py status 2> /dev/null
	RETVAL=$?
	return $RETVAL
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		status
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		RETVAL=2
esac
exit $RETVAL

